import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useSelector, useDispatch } from '@hooks';

import { closeCropModal } from '@modules/review/actions';
import { setFbToken, setStep } from '@modules/user/actions';

import { ArrowBack } from '@material-ui/icons';
import { Container, Navbar, IconButton, Content } from '@components/Review/styles';
import SwipeableMenu from '@components/Navbar/swipeable';
import FramePicker from '@components/FramePicker';
import SelectionSection from '@components/SelectionSection';
import CropModal from '@components/TileImages/CropModal';
import InstagramModal from '@components/InstagramModal';
import LowQualityModal from '@components/LowQualityModal';
import Loading from '@components/Loading';

import api from 'src/services/api';

function Review() {
  const router = useRouter();
  const dispatch = useDispatch();

  const { name, email } = useSelector((state) => state.user);
  const { open } = useSelector((state) => state.review.cropModal);
  const openInstagram = useSelector((state) => state.review.instagramModal.open);

  const [openDrawer, setOpenDrawer] = useState(false);

  async function handleFbCode() {
    try {
      const bodyFormData = new FormData();

      bodyFormData.append('client_id', '228315275914683');
      bodyFormData.append('client_secret', 'fbfba588c2111ab96e1a8203d11d3656');
      bodyFormData.append('grant_type', 'authorization_code');
      bodyFormData.append('redirect_uri', 'https://kwadros.vercel.app/review/');
      bodyFormData.append('code', String(router.query.code));

      const { data } = await api.post('https://api.instagram.com/oauth/access_token', bodyFormData);
      const { data: tokenData } = await api.get(
        `https://graph.instagram.com/access_token?grant_type=ig_exchange_token&client_secret=fbfba588c2111ab96e1a8203d11d3656&access_token=${data.access_token}`
      );

      dispatch(setFbToken({ payload: tokenData }));
    } catch (error) {
      dispatch(setFbToken({ payload: { access_token: '' } }));
    }
  }

  useEffect(() => {
    dispatch(closeCropModal());

    if (!name || !email) {
      dispatch(setStep({ payload: 0 }));
      router.push('/get-started');
    }
    //eslint-disable-next-line
  }, []);

  useEffect(() => {
    if (router.query?.code) {
      handleFbCode();
    }

    //eslint-disable-next-line
  }, [router?.query]);

  return (
    <>
      <Head>
        <title>Kwadros</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Navbar>
          <IconButton onClick={() => router.push('/')}>
            <ArrowBack />
          </IconButton>
          <span>KWADROS</span>
          <SwipeableMenu isblack={true} openDrawer={openDrawer} setOpenDrawer={setOpenDrawer} />
        </Navbar>
        <Content>
          <SelectionSection />
          <FramePicker />
        </Content>
        {open && <CropModal />}
        {openInstagram && <InstagramModal />}
        <LowQualityModal />
        <Loading />
      </Container>
    </>
  );
}

export default Review;
